{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Board","props","AllRows","Object","toConsumableArray","Array","numberOfRows","map","e","rowNumber","react_default","a","createElement","Row","key","numberOfColumns","displayRow","displayArray","buttonClick","row","columnNumber","BombBox","concat","displayNumber","rowColumnId","className","boxClass","boxNumber","join","onClick","event","App","gameParameters","difficulty","partsOfHash","useLocation","hash","slice","split","isNaN","parseInt","Math","round","useGetColumnsAndRows","_useState","useState","c","r","arrayMultiplyer","bombArray","random","otherNumberArray","numberForArray","makeGameArrays","_useState2","slicedToArray","gameArrays","updateGameArrays","useEffect","elements","document","getElementsByClassName","console","log","_step","_iterator","_createForOfIteratorHelper","s","n","done","element","value","style","width","height","err","f","setBoxSize","clickEvent","rowColumn","shift","shiftKey","currentClass","target","classList","column","forNumbersInArray","rowToIterate","columnToIterate","arrayOfIds","checkedIds","negativeOneToOne","forEach","firstNumber","secondNumber","includes","length","push","boxId","rowToShow","columnToShow","keys","bombRow","rowIndex","bombColumn","columnIndex","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","container","getElementById","ReactDOMClient","render","StrictMode","react_router_dom","src_App"],"mappings":"iuCAyFA,SAASA,EAAMC,GACb,IAAMC,EAAUC,OAAAC,EAAA,EAAAD,CAAIE,MAAMJ,EAAMK,eAAeC,IAAI,SAACC,EAAGC,GAAJ,OACjDC,EAAAC,EAAAC,cAACC,EAAD,CAAKC,IAAKL,EAAWM,gBAAiBd,EAAMc,gBAAiBN,UAAWA,EAAWO,WAAYf,EAAMgB,aAAaR,GAAYS,YAAajB,EAAMiB,gBAEnJ,OACER,EAAAC,EAAAC,cAAA,OAAKE,IAAI,SACNZ,GAKP,SAASW,EAAIZ,GAEX,IAAMkB,EAAMhB,OAAAC,EAAA,EAAAD,CAAIE,MAAMJ,EAAMc,kBAAkBR,IAAI,SAACC,EAAGY,GAAJ,OAChDV,EAAAC,EAAAC,cAACS,EAAD,CAASP,IAAG,GAAAQ,OAAKrB,EAAMQ,UAAX,KAAAa,OAAwBF,GAAgBG,cAAetB,EAAMe,WAAWI,GAAeI,YAAW,GAAAF,OAAKrB,EAAMQ,UAAX,KAAAa,OAAwBF,GAAgBF,YAAajB,EAAMiB,gBAE3K,OACER,EAAAC,EAAAC,cAAA,OAAKa,UAAU,cACZN,GAKP,SAASE,EAAQpB,GACf,IAAMyB,GAAoC,IAAzBzB,EAAMsB,cAAuB,iBACX,IAAzBtB,EAAMsB,cAAuB,aACJ,IAAzBtB,EAAMsB,cAAuB,gBACL,IAAxBtB,EAAMsB,cAAsB,oBAC5B,kBACJI,GAAqC,IAAzB1B,EAAMsB,cAAuB,IACZ,IAAzBtB,EAAMsB,cAAuB,IACJ,IAAzBtB,EAAMsB,cAAuB,GACL,IAAxBtB,EAAMsB,cAAsB,GAA5B,GAAAD,OACGrB,EAAMsB,eACnB,OACEb,EAAAC,EAAAC,cAAA,OAAKa,UAAW,CAAC,WAAYC,GAAUE,KAAK,KAAMC,QAAS,SAACC,GAAY7B,EAAMiB,YAAYY,EAAO7B,EAAMuB,eAAiBG,GAiF7GI,MAzMf,WACE,IAAMC,EA2HR,WACE,IAGIC,EACAlB,EAFEmB,EAFWC,cACKC,KAAKC,MAAM,GACRC,MAAM,KAK7BL,EADqB,SAAnBC,EAAY,IAAoC,WAAnBA,EAAY,IAAsC,SAAnBA,EAAY,GAC7DA,EAAY,GAEZ,SAIbnB,EADEwB,MAAMC,SAASN,EAAY,KACX,GAEAO,KAAKC,MAAMF,SAASN,EAAY,KAGpD,IAAM5B,EAAemC,KAAKC,MAAM3B,EAAkB,GAElD,MAAO,CACLkB,aACAlB,kBACAT,gBAnJqBqC,GADVC,EAE0BC,mBAuJzC,SAAwBZ,EAAYa,EAAGC,GACrC,IAAIC,EAEe,SAAff,EACFe,EAAkB,GACM,WAAff,EACTe,EAAkB,GACM,SAAff,IACTe,EAAkB,KAEpB,IAAMC,EAAY9C,OAAAC,EAAA,EAAAD,CAAIE,MAAM0C,IAAIxC,IAAI,kBAAMJ,OAAAC,EAAA,EAAAD,CAAIE,MAAMyC,IAAIvC,IAAI,kBAAMkC,KAAKC,MAAMD,KAAKS,SAAWF,OACvF/B,EAAed,OAAAC,EAAA,EAAAD,CAAIE,MAAM0C,IAAIxC,IAAI,kBAAMJ,OAAAC,EAAA,EAAAD,CAAIE,MAAMyC,IAAIvC,IAAI,kBAAO,MAChE4C,EAAmBhD,OAAAC,EAAA,EAAAD,CAAIE,MAAM0C,IAAIxC,IAAI,SAACC,EAAGC,GAAJ,OAAkBN,OAAAC,EAAA,EAAAD,CAAIE,MAAMyC,IAAIvC,IAAI,SAASC,EAAGY,GACzF,IAAIgC,EAAiB,EAcrB,OAb2C,IAAvCH,EAAUxC,GAAWW,IAEvBgC,GAAkB3C,EAAY,GAAK,GAAKW,EAAe,GAAK,EAAI6B,EAAUxC,EAAY,GAAGW,EAAe,GAAK,EAC7GgC,GAAkB3C,EAAY,GAAK,EAAIwC,EAAUxC,EAAY,GAAGW,GAAgB,EAChFgC,GAAkB3C,EAAY,GAAK,GAAKW,EAAe,EAAI0B,EAAIG,EAAUxC,EAAY,GAAGW,EAAe,GAAK,EAC5GgC,GAAkBhC,EAAe,GAAK,EAAI6B,EAAUxC,GAAWW,EAAe,GAAK,EACnFgC,GAAkBhC,EAAe,EAAI0B,EAAIG,EAAUxC,GAAWW,EAAe,GAAK,EAClFgC,GAAkB3C,EAAY,EAAIsC,GAAK3B,EAAe,GAAK,EAAI6B,EAAUxC,EAAY,GAAGW,EAAe,GAAK,EAC5GgC,GAAkB3C,EAAY,EAAIsC,EAAIE,EAAUxC,EAAY,GAAGW,GAAgB,EAC/EgC,GAAkB3C,EAAY,EAAIsC,GAAK3B,EAAe,EAAI0B,EAAIG,EAAUxC,EAAY,GAAGW,EAAe,GAAK,GAE3GgC,GAAkB,EAEbA,MAIT,MAAO,CACLH,YACAhC,eACAkC,oBAzL8CE,CAAerB,EAAeC,WAAYD,EAAejB,gBAAiBiB,EAAe1B,eAF5HgD,EAAAnD,OAAAoD,EAAA,EAAApD,CAAAyC,EAAA,GAENY,EAFMF,EAAA,GAEMG,EAFNH,EAAA,GA8Eb,OAJAI,oBAAU,YAqHZ,SAAoB3C,EAAiBT,GACnC,IAAMqD,EAAWC,SAASC,uBAAuB,YACjDC,QAAQC,IAAI,gBAFqC,IAAAC,EAAAC,EAAAC,EAG3BP,GAH2B,IAGjD,IAAAM,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAgC,KAArBC,EAAqBN,EAAAO,MAC9BD,EAAQE,MAAMC,MAAd,iBAAAnD,OAAuCP,EAAvC,YACAuD,EAAQE,MAAME,OAAd,iBAAApD,OAAwChB,EAAxC,aAL+C,MAAAqE,GAAAV,EAAAzD,EAAAmE,GAAA,QAAAV,EAAAW,KApH/CC,CAAW7C,EAAejB,gBAAiBiB,EAAe1B,gBAI1DI,EAAAC,EAAAC,cAAA,OAAKa,UAAU,eACbf,EAAAC,EAAAC,cAACZ,EAAD,CAAOM,aAAc0B,EAAe1B,aAAcS,gBAAiBiB,EAAejB,gBAAiBE,aAAcuC,EAAWvC,aAAcC,YA5E9I,SAAkB4D,EAAYC,GAC5B,IAAMC,EAAQF,EAAWG,SACnBC,EAAeJ,EAAWK,OAAOC,UAAU,GAC3CjE,EAAMqB,SAASuC,EAAUzC,MAAM,KAAK,IACpC+C,EAAS7C,SAASuC,EAAUzC,MAAM,KAAK,IACvCrB,EAAeuC,EAAWvC,aAC1BkC,EAAmBK,EAAWL,iBAC9BF,EAAYO,EAAWP,UAER,kBAAjBiC,EACEF,IACF/D,EAAaE,GAAKkE,IAAW,IAGQ,IAAnClC,EAAiBhC,GAAKkE,IAAmBL,EASvCA,GAA0B,cAAjBE,EACXjE,EAAaE,GAAKkE,IAAW,GACW,IAA/BpE,EAAaE,GAAKkE,IAAoD,IAAlClC,EAAiBhC,GAAKkE,GACnE,SAASC,EAAkBC,EAAcC,EAAiBC,EAAYC,GACpE,IAAMC,EAAmB,EAAE,EAAG,EAAG,GAkBjC,OAjBAA,EAAiBC,QAAQ,SAACC,GACxBF,EAAiBC,QAAQ,SAACE,GACnBJ,EAAWK,SAAX,GAAAzE,OAAuBiE,EAAeM,EAAtC,KAAAvE,OAAqDkE,EAAkBM,KACtEP,EAAeM,GAAe,GAAKN,EAAeM,EAAc5E,EAAa+E,QAC3ER,EAAkBM,GAAgB,GAAKN,EAAkBM,EAAe7E,EAAasE,GAAcS,SACrGN,EAAWO,KAAX,GAAA3E,OAAmBiE,EAAeM,EAAlC,KAAAvE,OAAiDkE,EAAkBM,KACe,IAA9E7E,EAAasE,EAAeM,GAAaL,EAAkBM,KAC7DL,EAAWQ,KAAX,GAAA3E,OAAmBiE,EAAeM,EAAlC,KAAAvE,OAAiDkE,EAAkBM,IACkB,IAAjF3C,EAAiBoC,EAAeM,GAAaL,EAAkBM,IACjER,EAAkBC,EAAeM,EAAaL,EAAkBM,EAAcL,EAAYC,SAQjGD,EAGUH,CAAkBnE,EAAKkE,EAAQ,GAAI,IAC3CO,QAAQ,SAACM,GAClB,IAAMC,EAAY3D,SAAS0D,EAAM5D,MAAM,KAAK,IACtC8D,EAAe5D,SAAS0D,EAAM5D,MAAM,KAAK,IAC/CrB,EAAakF,GAAWC,GAAgBjD,EAAiBgD,GAAWC,KAItEnF,EAAaE,GAAKkE,GAAUlC,EAAiBhC,GAAKkE,GAzCpDlF,OAAOkG,KAAKlD,GAAkByC,QAAQ,SAACU,EAASC,GAC9CpG,OAAOkG,KAAKlD,EAAiBoD,IAAWX,QAAQ,SAACY,EAAYC,IACV,IAA7CtD,EAAiBoD,GAAUE,KAC7BxF,EAAasF,GAAUE,GAAetD,EAAiBoD,GAAUE,QA2C3EhD,EAAiB,WACf,MAAO,CACLR,UAAWA,EACXhC,aAAcA,EACdkC,iBAAkBA,iBC7DXuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAArG,EAAA,GAAAsG,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCARW,EAAY1D,SAAS2D,eAAe,QAC7BC,aAA0BF,GAElCG,OACH/G,EAAAC,EAAAC,cAACF,EAAAC,EAAM+G,WAAP,KACEhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,KACEjH,EAAAC,EAAAC,cAACgH,EAAD,SAKNlB,EAAgB5C,QAAQC","file":"static/js/main.4f682f5c.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\n\nfunction App() {\n  const gameParameters = useGetColumnsAndRows();\n  const [gameArrays, updateGameArrays] = useState(makeGameArrays(gameParameters.difficulty, gameParameters.numberOfColumns, gameParameters.numberOfRows));\n\n  function boxClick(clickEvent, rowColumn) {\n    const shift = clickEvent.shiftKey;\n    const currentClass = clickEvent.target.classList[1];\n    const row = parseInt(rowColumn.split(\"-\")[0]);\n    const column = parseInt(rowColumn.split(\"-\")[1]);\n    const displayArray = gameArrays.displayArray;\n    const otherNumberArray = gameArrays.otherNumberArray;\n    const bombArray = gameArrays.bombArray;\n\n    if (currentClass === \"box-with-flag\") {\n      if (shift) {\n        displayArray[row][column] = -2;\n      }\n    } else {\n      if (otherNumberArray[row][column] === -1 && !shift) {\n        Object.keys(otherNumberArray).forEach((bombRow, rowIndex) => {\n          Object.keys(otherNumberArray[rowIndex]).forEach((bombColumn, columnIndex) => {\n            if (otherNumberArray[rowIndex][columnIndex] === -1) {\n              displayArray[rowIndex][columnIndex] = otherNumberArray[rowIndex][columnIndex];\n            }\n          });\n        });\n      } else {\n        if (shift && currentClass === \"blank-box\") {\n          displayArray[row][column] = -3;\n        } else if (displayArray[row][column] === -2 && otherNumberArray[row][column] === 0) {\n          function forNumbersInArray(rowToIterate, columnToIterate, arrayOfIds, checkedIds) {\n            const negativeOneToOne = [-1, 0, 1];\n            negativeOneToOne.forEach((firstNumber) => {\n              negativeOneToOne.forEach((secondNumber) => {\n                if (!checkedIds.includes(`${rowToIterate + firstNumber}-${columnToIterate + secondNumber}`)) {\n                  if (rowToIterate + firstNumber >= 0 && rowToIterate + firstNumber < displayArray.length) {\n                    if (columnToIterate + secondNumber >= 0 && columnToIterate + secondNumber < displayArray[rowToIterate].length) {\n                      checkedIds.push(`${rowToIterate + firstNumber}-${columnToIterate + secondNumber}`);\n                      if (displayArray[rowToIterate + firstNumber][columnToIterate + secondNumber] === -2) {\n                        arrayOfIds.push(`${rowToIterate + firstNumber}-${columnToIterate + secondNumber}`);\n                        if (otherNumberArray[rowToIterate + firstNumber][columnToIterate + secondNumber] === 0) {\n                          forNumbersInArray(rowToIterate + firstNumber, columnToIterate + secondNumber, arrayOfIds, checkedIds);\n                        }\n                      }\n                    }\n                  }\n                }\n              });\n            });\n            return arrayOfIds;\n          };\n\n          const arrayOfIds = forNumbersInArray(row, column, [], []);\n          arrayOfIds.forEach((boxId) => {\n            const rowToShow = parseInt(boxId.split(\"-\")[0]);\n            const columnToShow = parseInt(boxId.split(\"-\")[1]);\n            displayArray[rowToShow][columnToShow] = otherNumberArray[rowToShow][columnToShow];\n          });\n\n        } else {\n          displayArray[row][column] = otherNumberArray[row][column];\n        }\n      }\n    }\n\n    updateGameArrays(() => {\n      return {\n        bombArray: bombArray,\n        displayArray: displayArray,\n        otherNumberArray: otherNumberArray\n      }\n    });\n  }\n\n  useEffect(() => {\n    setBoxSize(gameParameters.numberOfColumns, gameParameters.numberOfRows);\n  });\n\n  return (\n    <div className=\"main-window\">\n      <Board numberOfRows={gameParameters.numberOfRows} numberOfColumns={gameParameters.numberOfColumns} displayArray={gameArrays.displayArray} buttonClick={boxClick}/>\n    </div>\n  );\n}\n\nfunction Board(props) {\n  const AllRows = [...Array(props.numberOfRows)].map((e, rowNumber) =>\n    <Row key={rowNumber} numberOfColumns={props.numberOfColumns} rowNumber={rowNumber} displayRow={props.displayArray[rowNumber]} buttonClick={props.buttonClick}/>\n  );\n  return (\n    <div key=\"board\">\n      {AllRows}\n    </div>\n  );\n}\n\nfunction Row(props) {\n\n  const row = [...Array(props.numberOfColumns)].map((e, columnNumber) =>\n    <BombBox key={`${props.rowNumber}-${columnNumber}`} displayNumber={props.displayRow[columnNumber]} rowColumnId={`${props.rowNumber}-${columnNumber}`} buttonClick={props.buttonClick}/>\n  );\n  return (\n    <div className=\"single-row\">\n      {row}\n    </div>\n  );\n}\n\nfunction BombBox(props) {\n  const boxClass = props.displayNumber === -3 ? \"box-with-flag\"\n          : props.displayNumber === -2 ? \"blank-box\"\n          : props.displayNumber === -1 ? \"box-with-bomb\"\n          : props.displayNumber === 0 ? \"blank-box-clicked\"\n          : \"box-with-number\";\n  const boxNumber = props.displayNumber === -3 ? \"\"\n          : props.displayNumber === -2 ? \"\"\n          : props.displayNumber === -1 ? \"\"\n          : props.displayNumber === 0 ? \"\"\n          : `${props.displayNumber}`;\n  return (\n    <div className={[\"bomb-box\", boxClass].join(' ')} onClick={(event) => { props.buttonClick(event, props.rowColumnId) }}>{boxNumber}</div>\n  );\n};\n\nfunction useGetColumnsAndRows() {\n  const location = useLocation();\n  const hash = location.hash.slice(1);\n  const partsOfHash = hash.split(\":\");\n  let difficulty;\n  let numberOfColumns;\n\n  if (partsOfHash[0] === \"easy\" || partsOfHash[0] === \"medium\" || partsOfHash[0] === \"hard\") {\n    difficulty = partsOfHash[0];\n  } else {\n    difficulty = \"medium\";\n  }\n\n  if (isNaN(parseInt(partsOfHash[1]))) {\n    numberOfColumns = 30;\n  } else {\n    numberOfColumns = Math.round(parseInt(partsOfHash[1]));\n  }\n\n  const numberOfRows = Math.round(numberOfColumns / 2);\n\n  return {\n    difficulty,\n    numberOfColumns,\n    numberOfRows\n  }\n\n}\n\nfunction makeGameArrays(difficulty, c, r) {\n  let arrayMultiplyer;\n\n  if (difficulty === \"easy\") {\n    arrayMultiplyer = 0.6;\n  } else if (difficulty === \"medium\") {\n    arrayMultiplyer = 0.7;\n  } else if (difficulty === \"hard\") {\n    arrayMultiplyer = 1.1;\n  }\n  const bombArray = [...Array(r)].map(() => [...Array(c)].map(() => Math.round(Math.random() * arrayMultiplyer)));\n  const displayArray = [...Array(r)].map(() => [...Array(c)].map(() => -2));\n  const otherNumberArray = [...Array(r)].map((e, rowNumber) => [...Array(c)].map(function(e, columnNumber) {\n    let numberForArray = 0;\n    if (bombArray[rowNumber][columnNumber] === 0) {\n\n      numberForArray += rowNumber - 1 >= 0 && columnNumber - 1 >= 0 ? bombArray[rowNumber - 1][columnNumber - 1] : 0;\n      numberForArray += rowNumber - 1 >= 0 ? bombArray[rowNumber - 1][columnNumber] : 0;\n      numberForArray += rowNumber - 1 >= 0 && columnNumber + 1 < c ? bombArray[rowNumber - 1][columnNumber + 1] : 0;\n      numberForArray += columnNumber - 1 >= 0 ? bombArray[rowNumber][columnNumber - 1] : 0;\n      numberForArray += columnNumber + 1 < c ? bombArray[rowNumber][columnNumber + 1] : 0;\n      numberForArray += rowNumber + 1 < r && columnNumber - 1 >= 0 ? bombArray[rowNumber + 1][columnNumber - 1] : 0;\n      numberForArray += rowNumber + 1 < r ? bombArray[rowNumber + 1][columnNumber] : 0;\n      numberForArray += rowNumber + 1 < r && columnNumber + 1 < c ? bombArray[rowNumber + 1][columnNumber + 1] : 0;\n    } else {\n      numberForArray = -1;\n    }\n    return numberForArray;\n  }\n  ));\n\n  return {\n    bombArray,\n    displayArray,\n    otherNumberArray\n  };\n}\n\nfunction setBoxSize(numberOfColumns, numberOfRows) {\n  const elements = document.getElementsByClassName('bomb-box');\n  console.log(\"setting size\")\n  for (const element of elements) {\n    element.style.width = `calc((100vw / ${numberOfColumns}) - 1px)`;\n    element.style.height = `calc((100vh / ${numberOfRows}) - 1px)`;\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = ReactDOMClient.createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>\n);\n\nreportWebVitals(console.log);\n"],"sourceRoot":""}